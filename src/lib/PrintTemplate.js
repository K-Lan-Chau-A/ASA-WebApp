import API_URL from "@/config/api";

export default class PrintTemplate {
  /**
   * üîπ L·∫•y th√¥ng tin c·ª≠a h√†ng t·ª´ localStorage (ƒë√£ c√≥ khi login)
   * Kh√¥ng c·∫ßn g·ªçi l·∫°i API /api/shops/:id
   */
  static async getShopInfo() {
    try {
      // ∆Øu ti√™n cache trong localStorage
      const cache = localStorage.getItem("cachedShopInfo");
      if (cache) return JSON.parse(cache);

      // L·∫•y profile khi login
      const profile = JSON.parse(localStorage.getItem("userProfile") || "null");
      if (!profile) throw new Error("Kh√¥ng t√¨m th·∫•y th√¥ng tin ƒëƒÉng nh·∫≠p.");

      // T·∫°o ƒë·ªëi t∆∞·ª£ng shop
      const shop = {
        id: profile.shopId || 0,
        name: profile.shopName || "C·ª≠a h√†ng c·ªßa b·∫°n",
        branch: profile.branchName || "",
        address: profile.shopAddress || "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ",
        phone: profile.phoneNumber || "",
        wifi: profile.wifiPassword || "",
      };

      // L∆∞u cache ƒë·ªÉ d√πng l·∫ßn sau
      localStorage.setItem("cachedShopInfo", JSON.stringify(shop));
      return shop;
    } catch (e) {
      console.warn("[PrintTemplate] ‚ö†Ô∏è getShopInfo:", e.message);
      return {
        name: "C·ª≠a h√†ng c·ªßa b·∫°n",
        branch: "",
        address: "Ch∆∞a c√≥ ƒë·ªãa ch·ªâ",
        phone: "",
        wifi: "",
      };
    }
  }

  /**
   * üîπ T·∫°o n·ªôi dung h√≥a ƒë∆°n 80mm
   */
  static async buildReceipt(order, shop = null) {
    if (!shop) shop = await this.getShopInfo();

    const fmt = new Intl.NumberFormat("vi-VN");
    const now = new Date();
    const dateStr = now.toLocaleDateString("vi-VN");
    const timeStr = now.toLocaleTimeString("vi-VN", { hour: "2-digit", minute: "2-digit" });
    const line = "------------------------------------------";

    let out = "";
    out += "\n";
    out += `           üêº ${shop.name.toUpperCase()}\n`;
    if (shop.branch) out += `       ${shop.branch}\n`;
    out += `ƒê·ªãa ch·ªâ: ${shop.address}\n`;
    if (shop.phone) out += `Hotline: ${shop.phone}\n`;
    out += "\n";
    out += "        H√ìA ƒê∆†N THANH TO√ÅN\n";
    out += `S·ªë Hƒê: ${(order.id?.toString().padStart(6, "0")) || "000000"}\n`;
    out += line + "\n";

    out += `Ng√†y: ${dateStr}   Gi·ªù: ${timeStr}\n`;
    out += `Ph∆∞∆°ng th·ª©c: ${order.method || "Ti·ªÅn m·∫∑t"}\n`;
    out += `Kh√°ch h√†ng: ${order.customerName || "Kh√°ch l·∫ª"}\n`;
    out += line + "\n";

    // Danh s√°ch m√≥n
    out += "STT  T√äN M√ìN              SL   ƒê.GI√Å   T.TI·ªÄN\n";
    out += line + "\n";
    (order.items || []).forEach((it, i) => {
      const name = (it.name || "").substring(0, 18).padEnd(18, " ");
      const qty = String(it.qty).padStart(2, " ");
      const price = fmt.format(it.price).padStart(7, " ");
      const total = fmt.format(it.price * it.qty).padStart(8, " ");
      out += `${(i + 1).toString().padEnd(3, " ")} ${name}${qty}${price}${total}\n`;
      if (it.note) out += `     - ${it.note}\n`;
    });

    out += line + "\n";
    out += `T·ªïng c·ªông:            ${fmt.format(order.total)} ƒë\n`;
    if (order.discount) out += `Gi·∫£m gi√°:             -${fmt.format(order.discount)} ƒë\n`;
    out += line + "\n";
    out += `Th√†nh ti·ªÅn:           ${fmt.format(order.total - (order.discount || 0))} ƒë\n`;
    out += line + "\n";

    // Footer
    out += `+Thanh to√°n (${order.method || "Ti·ªÅn m·∫∑t"})\n`;
    if (shop.wifi) out += `PASS WIFI: ${shop.wifi}\n`;
    out += "Nh√† h√†ng ch·ªâ xu·∫•t bill h√≥a ƒë∆°n GTGT\n";
    out += "t·∫°i th·ªùi ƒëi·ªÉm thanh to√°n.\n\n";
    out += "Bills or invoices are only issued at\n";
    out += "the time of payment.\n";
    out += "C·∫£m ∆°n qu√Ω kh√°ch v√† h·∫πn g·∫∑p l·∫°i!\n";
    out += "Thank you and see you again!\n";
    out += line + "\n";
    out += "ƒê·ªëi t√°c c√¥ng ngh·ªá: ASA POS\n";
    out += "Powered by asa-pos.vn\n";
    out += "\n\n\n";
    return out;
  }
}
